[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "alfred-bot"
version = "0.8.0"
description = "Alfred Bot - A local assistant chatbot with vector search and session management"
authors = [
    { name = "Irfan Murad", email = "irfanfmurad@gmail.com" }
]
readme = "README.md" 
license = { text = "GPL-3.0-or-later" }  
requires-python = ">=3.11"
keywords = ["chatbot", "ai", "assistant", "vector-search", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications :: Chat",
]

# Core dependencies with version ranges (more flexible)
dependencies = [
    "chromadb>=1.0.13,<2.0.0",
    "fastapi>=0.104.1,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    "pydantic>=2.11.7,<3.0.0",
    "redis>=6.2.0,<7.0.0",
    "sentence-transformers>=5.0.0,<6.0.0",
    "httpx>=0.28.1,<1.0.0",
    
    "python-dotenv>=1.0.0,<2.0.0",
    "loguru>=0.7.3,<1.0.0",
    "requests>=2.32.4,<3.0.0",
    "numpy>=2.3.1,<3.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "PyYAML>=6.0.2,<7.0.0",
    "typer>=0.16.0,<1.0.0",
    "tqdm>=4.67.1,<5.0.0",
]

[project.urls]
Repository = "https://github.com/irfanvtf/alfred-bot"
Issues = "https://github.com/irfanvtf/alfred-bot/issues"

[project.optional-dependencies]
dev = [
    "black>=23.11.0,<25.0.0",
    "flake8>=6.1.0,<8.0.0",
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "coverage>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
]
test = [
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "coverage>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
]
lint = [
    "black>=23.11.0,<25.0.0",
    "flake8>=6.1.0,<8.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
]



[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=alfred_bot",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    
    
    "redis.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    "venv",
]